"""Initial migration

Revision ID: 583f8a3eb9cf
Revises: 
Create Date: 2024-04-15 00:49:56.553710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '583f8a3eb9cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tide_data_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('date_inscription', sa.DateTime(), nullable=False),
    sa.Column('notification', sa.Boolean(), nullable=True),
    sa.Column('localisation', sa.Boolean(), nullable=True),
    sa.Column('langue', sa.Integer(), nullable=True),
    sa.Column('macro_tutoriel', sa.Boolean(), nullable=True),
    sa.Column('micro_tutoriel', sa.Boolean(), nullable=True),
    sa.Column('materials', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('samples',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('site_location', sa.String(), nullable=True),
    sa.Column('seaboard', sa.String(), nullable=True),
    sa.Column('river_name', sa.String(), nullable=True),
    sa.Column('establishment_name', sa.String(), nullable=True),
    sa.Column('establishment_commune', sa.String(), nullable=True),
    sa.Column('class_level', sa.String(), nullable=True),
    sa.Column('number_of_students', sa.Integer(), nullable=True),
    sa.Column('academy_number', sa.Enum('OTHER', 'INTERNATIONAL', 'AIX_MARSEILLE', 'AMIENS', 'BESANCON', 'BORDEAUX', 'CLERMONT_FERRAND', 'CORSE', 'CRETEIL', 'DIJON', 'GRENOBLE', 'GUADELOUPE', 'GUYANE', 'LA_REUNION', 'LILLE', 'LIMOGES', 'LYON', 'MARTINIQUE', 'MAYOTTE', 'MONTPELLIER', 'NANCY_METZ', 'NANTES', 'NICE', 'NORMANDIE', 'NOUVELLE_CALEDONIE', 'ORLEANS_TOURS', 'PARIS', 'POITIERS', 'POLYNESIE_FRANCAISE', 'REIMS', 'RENNES', 'SAINT_PIERRE_ET_MIQUELON', 'STRASBOURG', 'TOULOUSE', 'VERSAILLES', 'WALLIS_ET_FUTUNA', name='academy'), nullable=True),
    sa.Column('site_name', sa.String(), nullable=True),
    sa.Column('site_code', sa.String(), nullable=True),
    sa.Column('department_number', sa.String(), nullable=True),
    sa.Column('commune_name', sa.String(), nullable=True),
    sa.Column('sample_date', sa.DateTime(), nullable=True),
    sa.Column('sample_time', sa.DateTime(), nullable=True),
    sa.Column('tide_coefficient', sa.Float(), nullable=True),
    sa.Column('high_tide_time', sa.DateTime(), nullable=True),
    sa.Column('collect_participants', sa.Integer(), nullable=True),
    sa.Column('collect_duration', sa.Float(), nullable=True),
    sa.Column('sorting_participants', sa.Integer(), nullable=True),
    sa.Column('sorting_duration', sa.Float(), nullable=True),
    sa.Column('bands_studied', sa.Integer(), nullable=True),
    sa.Column('drift_line_present', sa.String(), nullable=True),
    sa.Column('drift_line_count', sa.Integer(), nullable=True),
    sa.Column('transect_length', sa.Float(), nullable=True),
    sa.Column('back_site_type', sa.String(), nullable=True),
    sa.Column('start_gps_latitude', sa.Float(), nullable=True),
    sa.Column('start_gps_longitude', sa.Float(), nullable=True),
    sa.Column('end_gps_latitude', sa.Float(), nullable=True),
    sa.Column('end_gps_longitude', sa.Float(), nullable=True),
    sa.Column('currents_direction', sa.String(), nullable=True),
    sa.Column('winds_direction', sa.String(), nullable=True),
    sa.Column('site_direction', sa.String(), nullable=True),
    sa.Column('main_material', sa.String(), nullable=True),
    sa.Column('pollution_influence', sa.String(), nullable=True),
    sa.Column('yearly_usage', sa.String(), nullable=True),
    sa.Column('summer_usage', sa.String(), nullable=True),
    sa.Column('foot_accessibility', sa.String(), nullable=True),
    sa.Column('nearest_agglomeration', sa.String(), nullable=True),
    sa.Column('agglomeration_type', sa.String(), nullable=True),
    sa.Column('agglomeration_distance', sa.Float(), nullable=True),
    sa.Column('immediate_infrastructure', sa.Boolean(), nullable=True),
    sa.Column('immediate_takeaway_food', sa.String(), nullable=True),
    sa.Column('distance_to_coastline', sa.Float(), nullable=True),
    sa.Column('nearest_port_distance', sa.Float(), nullable=True),
    sa.Column('nearest_port_name', sa.String(), nullable=True),
    sa.Column('nearest_port_type', sa.String(), nullable=True),
    sa.Column('nearest_port_size', sa.Integer(), nullable=True),
    sa.Column('nearest_estuary_distance', sa.Float(), nullable=True),
    sa.Column('nearest_estuary_name', sa.String(), nullable=True),
    sa.Column('nearest_river_name', sa.String(), nullable=True),
    sa.Column('proximity_to_waste_disposal', sa.String(), nullable=True),
    sa.Column('waste_disposal_distance', sa.Float(), nullable=True),
    sa.Column('recent_cleaning', sa.String(), nullable=True),
    sa.Column('cleaning_frequency', sa.String(), nullable=True),
    sa.Column('cleaning_method', sa.String(), nullable=True),
    sa.Column('cleaning_responsibility', sa.String(), nullable=True),
    sa.Column('tide_gauge_presence', sa.String(), nullable=True),
    sa.Column('recent_meteo_events', sa.String(), nullable=True),
    sa.Column('meteo_interpretation', sa.String(), nullable=True),
    sa.Column('additional_comments', sa.String(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('macro_weight', sa.Float(), nullable=True),
    sa.Column('macro_volume', sa.Float(), nullable=True),
    sa.Column('total_macro_items', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('macro',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('samples_id', sa.UUID(), nullable=True),
    sa.Column('object_row', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['samples_id'], ['samples.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meso',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('samples_id', sa.UUID(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('texture', sa.String(), nullable=True),
    sa.Column('quadra_1', sa.Integer(), nullable=True),
    sa.Column('quadra_2', sa.Integer(), nullable=True),
    sa.Column('quadra_3', sa.Integer(), nullable=True),
    sa.Column('quadra_4', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['samples_id'], ['samples.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('micro',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('samples_id', sa.UUID(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('texture', sa.String(), nullable=True),
    sa.Column('quadra_1', sa.Integer(), nullable=True),
    sa.Column('quadra_2', sa.Integer(), nullable=True),
    sa.Column('quadra_3', sa.Integer(), nullable=True),
    sa.Column('quadra_4', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['samples_id'], ['samples.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('micro')
    op.drop_table('meso')
    op.drop_table('macro')
    op.drop_table('samples')
    op.drop_table('users')
    op.drop_table('tide_data_cache')
    # ### end Alembic commands ###
